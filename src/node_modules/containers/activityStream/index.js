import './activity.css'
import React, { Component } from 'react';
import { connect } from 'react-redux';
import { Link } from 'react-router';
import TimeStamp from 'react-timestamp'

import { fetchActivity } from 'actions';
import { getActivity } from 'selectas';

class ActivityStream extends Component {
  componentDidMount() {
    this.props.fetchActivity();
  }

  noAvatar(img) {
    return img.indexOf('no_avatar.gif') > 0 ? '/resources/no_avatar.jpg' : img;
  }

  activityAction(nodeType) {
    switch (nodeType) {
      case 17:
        return 'commented';
      case 18:
        return 'replied to a comment';
      case 2:
      default:
        return 'posted';
    }
  }

  renderActivityStream(card, index) {
    // console.log("rendering activity..",card, index);
    const authorAvatar = card.authorAvatar //this.noAvatar(card.authorAvatar);
    const activityAction = this.activityAction(card.nodeType);
    const date = new Date(card.postDate);
    
    return (
      <div className="col-md-12 col-sm-12 col-lg-12" key={index}>
        <div className="activity-card">
          <img
            className="rounded-circle"
            src={authorAvatar}
            alt={card.author}
          />
          <div className="activity-body">
            <p className="activity-title">
              <span className="activity-author">
                <Link to={`/cards/${card.nodeid}`}>{card.author}</Link>
              </span>{' '}
              {activityAction} on the idea
            </p>
            <h6>{card.title}</h6>
            <p className="activity-time">
              <TimeStamp
                time={date}
                precision={1}
                utc={false}
                format="ago"
              />
            </p>
          </div>
        </div>
      </div>
    );
  }
  render() {
    const { activity } = this.props;
    return (
      <div className="activity row">
        {activity.map((card, index) => this.renderActivityStream(card, index))}
      </div>
    );
  }
}

const mapStateToProps = state => ({
  activity: getActivity(state)
});

const mapDispatchToProps = {
  fetchActivity
};
export default connect(mapStateToProps, mapDispatchToProps)(ActivityStream);
